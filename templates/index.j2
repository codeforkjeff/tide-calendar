<!DOCTYPE html>
<html lang="en">
<head>
  <title>Tide Calendar</title>
  <style>
    .col-label {
      width: 250px;
      text-align: right;
      padding: 0 1em 1em 1em;
    }
    #form {
      margin-bottom: 2em;
    }
    .month-container {
      margin-bottom: 1em;
    }
  </style>
  <script src="/static/js-year-calendar.min.js"></script>
  <link rel='stylesheet' href='/static/js-year-calendar.min.css'>

  <link rel="stylesheet" href="https://code.jquery.com/ui/1.14.1/themes/base/jquery-ui.css">
  <script src="https://code.jquery.com/jquery-3.7.1.js"></script>
  <script src="https://code.jquery.com/ui/1.14.1/jquery-ui.js"></script>
  <script>
  (function () {

    // stolen from https://bobbyhadz.com/blog/javascript-convert-date-to-timezone
    // resulting Dates will reflect browser's local tz, but its value
    // should be correct for the passed-in timezone
    const changeTimeZone = (date, timeZone) => {
      if (typeof date === 'string') {
        return new Date(
          new Date(date).toLocaleString('en-US', {
            timeZone,
          }),
        );
      }

      return new Date(
        date.toLocaleString('en-US', {
          timeZone,
        }),
      );
    };

    const makeDate = (timestamp, timeZone) => {
      return changeTimeZone(new Date(timestamp), timeZone);
    };

    const loadTides = async () => {
      const formData = new FormData(document.getElementById("form"));
      const qs = new URLSearchParams(formData).toString();
      const url = "/api/tides?" + qs;

      try {
        const response = await fetch(url);
        if (!response.ok) {
          alert(`Response status: ${response.status}`);
        }
        const result = await response.json();

        const container = document.getElementById("table");

        // result['tides'].forEach(record => {
        //   container.insertAdjacentHTML("beforeend", `<div>${new Date(record.tide * 1000)} ${record.prediction}ft</div>`);
        // })

        const station = result["station"];

        document.getElementById("station_link").setAttribute("href", "https://tidesandcurrents.noaa.gov/noaatidepredictions.html?id=" + station["nos_id"]);
        document.getElementById("station_link").innerHTML = `${station["name"]}, ${station["state"]} (${station["nos_id"]})`;
        document.getElementById("low_min").innerHTML = result["low_min"];
        document.getElementById("high_max").innerHTML = result["high_max"];
        document.getElementById("low_avg").innerHTML = result["low_avg"];
        document.getElementById("high_avg").innerHTML = result["high_avg"];

        renderCalendar(result['tides'], result['tz'])

        //console.log(result);
      } catch (error) {
        alert(error.message);
      }
    }

    const getColor = (prediction) => {
      if(prediction < -4) {
        return "#8b0000";
      } else if (prediction < -2) {
        return "#cd5c5c";
      } else {
        return "#ffa07a";
      }
    };

    const formatTime = (date) => {
      const _hours = date.getHours();
      const hours = _hours > 12 ? _hours - 12 : _hours;
      const ampm = _hours > 12 ? "pm" : "am";
      const minutes = ('00' + date.getMinutes()).slice(-2);
      return `${hours}:${minutes}${ampm}`;
    };

    const renderCalendar = async(data, tz) => {

      const dataSource = data.map(record => {
        const date = makeDate(record.tide * 1000, tz);
        const sunrise = makeDate(record.daylight.sunrise * 1000, tz);
        const sunset = makeDate(record.daylight.sunset * 1000, tz);
        return {
          name: `${formatTime(date)} ${record.prediction} ft`,
          color: getColor(record.prediction),
          startDate: date,
          endDate: date,
          // not a calendar-recognized key; for our own use
          daylight: `Daylight: ${formatTime(sunrise)} - ${formatTime(sunset)}`
        };
      })

      const year = makeDate(data[0].tide * 1000, tz).getFullYear();
      console.log(year);

      const calendar = new Calendar('#calendar', {
        minDate: new Date(year, 0, 1),
        maxDate: new Date(year, 11, 31),
        startYear: year,
        mouseOnDay: function(e) {
          if(e.events.length > 0) {
            var content = '';
            for(var i in e.events) {
              if(content.length > 0) {
                content += "<br/>"
              }
              content += e.events[i].name;
            }
            content += "<br/>" + e.events[0].daylight;
            // e.element is a TD element
            $(e.element).tooltip({ content: content, items: ".day" });
            $(e.element).tooltip("open");
          }
        },
        mouseOutDay: function(e) {
            if(e.events.length > 0) {
              $(e.element).tooltip('close');
            }
        },
        dataSource: dataSource,
      });
    };

    document.addEventListener("DOMContentLoaded", (event) => {
      loadTides();
    });
  })();
  </script>
</head>
<body>
  <h1>Tide Calendar</h1>

  <form id="form">
    <div style="display: flex">
      <div class="col-label">
        Station:
      </div>
      <div>
        <select name="station">
          {% for station_item in stations %}
            <option value="{{ station_item.nos_id }}" {% if selected["station"] == station_item.nos_id %}selected{% endif %} >{{ station_item.name }}, {{ station_item.state}}</option>
          {% endfor %}
        </select>
      </div>
    </div>
    <div style="display: flex">
      <div class="col-label">
        Year:
      </div>
      <div>
        <select name="year">
          <option value="2025" {% if selected["year"] == "2025" %}selected{% endif %}>2025</option>
          <option value="2026" {% if selected["year"] == "2026" %}selected{% endif %}>2026</option>
        </select>
      </div>
    </div>
    <div style="display: flex">
      <div class="col-label">
        Tide Type:
      </div>
      <div>
        <select name="tide_type">
          {% for tide_type_item in tide_type %}
            <option value="{{ tide_type_item.value }}" {% if selected["tide_type"] == tide_type_item.value %}selected{% endif %} >{{ tide_type_item.value }}</option>
          {% endfor %}
        </select>
      </div>
    </div>
    <div style="display: flex">
      <div class="col-label">
        Tide height limit (ft):
      </div>
      <div>
        <input type="text" name="prediction_limit" size="5" value="{{ selected.get("prediction_limit", 0) }}">
      </div>
    </div>
    <div style="display: flex">
      <div class="col-label">
        Show tides during:
      </div>
      <div>
        <select name="hours_filter">
          <option value="day" {% if selected["hours_filter"] == "day" %}selected{% endif %}>daylight hours</option>
          <option value="day_1" {% if selected["hours_filter"] == "day_1" %}selected{% endif %}>daylight +/- 1 hour</option>
          <option value="night" {% if selected["hours_filter"] == "night" %}selected{% endif %}>nighttime hours</option>
          <option value="anytime" {% if selected["hours_filter"] == "anytime" %}selected{% endif %}>any time of day</option>
        </select>
        <select name="day_filter">
          <option value="any" {% if selected["day_filter"] == "any" %}selected{% endif %}>any day of week</option>
          <option value="weekend" {% if selected["day_filter"] == "weekend" %}selected{% endif %}>weekends only</option>
          <option value="weekday" {% if selected["day_filter"] == "weekday" %}selected{% endif %}>weekdays only</option>
        </select>
      </div>
    </div>
    <div style="display: flex">
      <div class="col-label"></div>
      <div>
        <input type="submit" value="Update">
      </div>
    </div>
  </form>

  <div id="station_info">
    <p>NOS Station Page: <a id="station_link" target="_blank" href=""></a></div>
    <p>Tidal range: <span id="low_min"></span> ft to <span id="high_max"></span> ft</p>
    <p>Average low tide for this year: <span id="low_avg"></span> ft</p>
    <p>Average high tide for this year: <span id="high_avg"></span> ft</p>
  </div>


  <div id="calendar">
    <div>Loading, hang on...</div>
  </div>

  <div id="table">
  </div>

</body>
</html>
